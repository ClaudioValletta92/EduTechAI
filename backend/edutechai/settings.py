import os
from pathlib import Path
from decouple import config
import os
import dj_database_url  # Ensure you have this package installed

"""
Django settings for edutechai project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10 MB
X_FRAME_OPTIONS = "ALLOWALL"  # This allows all domains to embed your content

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Load MEDIA_ROOT from .env
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"
GEMINI_API_KEY = config("GEMINI_API_KEY")
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-i##!x!4__2bh@sbu1!olg09!g4q-e!!fn&g)!4l2!@099(dn7f"
CORS_ALLOWED_ORIGINS = ["http://localhost:3000"]
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

AUTH_USER_MODEL = "app.CustomUser"
# settings.py

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    # Add any other origins you trust, such as your production domain
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "app",  # La nostra app principale
    "rest_framework",  # Per API REST
    "django_celery_results",  # Per memorizzare i risultati di Celery
    "corsheaders",
    "accounts",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

CORS_ALLOW_CREDENTIALS = True  # Allow authentication via cookies
CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"]
CORS_ALLOW_HEADERS = ["*"]  # Allow all headers (temporary for debugging)

ROOT_URLCONF = "edutechai.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "edutechai.wsgi.application"
# Enable session authentication
SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Use database-backed sessions
SESSION_COOKIE_NAME = "sessionid"  # Default session cookie name
SESSION_COOKIE_AGE = 1209600  # Session expiry in seconds (2 weeks)
SESSION_COOKIE_SECURE = False  # Set to True in production (HTTPS only)
SESSION_COOKIE_HTTPONLY = True  # Prevent JavaScript access to the cookie
SESSION_COOKIE_SAMESITE = "Lax"  # Prevent CSRF attacks
CSRF_COOKIE_SECURE = False  # Only send CSRF cookies over HTTPS

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


DATABASES = {"default": dj_database_url.config(default=os.getenv("DATABASE_URL"))}


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # Add this line

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Configurazione Celery
CELERY_BROKER_URL = "redis://redis:6379/0"  # Redis come message broker
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_BACKEND = "django-db"  # Salviamo i risultati nel DB di Django

# Configurazione Redis per la cache (opzionale)
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": "redis://redis:6379/1",
    }
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "django.db.backends": {
            "handlers": ["console"],
            "level": "DEBUG",
        },
    },
}

CORS_ALLOW_ALL_ORIGINS = True  # Allow all requests (TEMPORARY)
ALLOWED_HOSTS = ["*"]  # Allow all hosts (temporary for debugging)
